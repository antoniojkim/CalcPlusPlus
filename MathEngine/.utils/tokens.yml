specialTokens:
    - HEX
    - BIN
    - NUM
    - ID
    - SPECIALID
    - FUNCTION
    - TUPLE
    - MATRIX
operators:
    COMMA:
        lexeme: ","
        precedence: 1
    EQUALS:
        lexeme: "="
        precedence: 2
        rightAssociative:
    COLON_EQUALS:
        lexeme: ":="
        precedence: 2
        rightAssociative:
    L_ARROW:
        lexeme: "<-"
        precedence: 2
        rightAssociative:
    PIPE_PIPE:
        lexeme: "||"
        precedence: 3
    AMP_AMP:
        lexeme: "&&"
        precedence: 4
    PIPE:
        lexeme: "|"
        precedence: 5
    CARET_PIPE:
        lexeme: "^|"
        precedence: 6
    AMP:
        lexeme: "&"
        precedence: 7
    EQUALS_EQUALS:
        lexeme: "=="
        precedence: 8
    NOT_EQUALS:
        lexeme: "!="
        precedence: 8
    LT:
        lexeme: "<"
        precedence: 9
    GT:
        lexeme: ">"
        precedence: 9
    LT_EQ:
        lexeme: "<="
        precedence: 9
    GT_EQ:
        lexeme: ">="
        precedence: 9
    TILDE:
        lexeme: "~"
        precedence: 9
        singleOperator:
    LT_LT:
        lexeme: "<<"
        precedence: 10
    GT_GT:
        lexeme: ">>"
        precedence: 10
    PLUS:
        lexeme: "+"
        precedence: 11
        expression:
    MINUS:
        lexeme: "-"
        precedence: 11
        expression:
    STAR:
        lexeme: "*"
        precedence: 12
        expression:
    SLASH:
        lexeme: "/"
        precedence: 12
        expression:
    PCT:
        lexeme: "%"
        precedence: 12
    SLASH_SLASH:
        lexeme: "//"
        precedence: 12
    EXCL:
        lexeme: "!"
        precedence: 12
        singleOperator:
    EXCL_EXCL:
        lexeme: "!!"
        precedence: 12
        singleOperator:
    CHOOSE:
        lexeme: "C"
        precedence: 12
    PERMUTE:
        lexeme: "P"
        precedence: 12
    CARET:
        lexeme: "^"
        precedence: 13
        rightAssociative: True
    STAR_STAR:
        lexeme: "**"
        precedence: 13
        rightAssociative: True
    R_ARROW:
        lexeme: "->"
        precedence: 14
        rightAssociative: True
    COLON:
        lexeme: ":"
        precedence: 14
        rightAssociative: True
tokens:
    LPAREN: "("
    RPAREN: ")"
    LSQUARE: "["
    RSQUARE: "]"
    LBRACE: "{"
    RBRACE: "}"
    DOT: "."
    SEMICOLON: ";"
    QUESTION: "?"
    POUND: "#"
    DOLLAR: "$"
    QUOTE: "\\\""
    APOSTROPHE: "\\'"
    BACKSLASH: "\\\\"
    BACKTICK: "`"
    UNDERSCORE: "_"
    C: "C"
    P: "P"
functions:
    # Basic
    neg:
    abs:
    sqrt:
    hypot: -1
    ldexp: 2
    frexp:
    fcmp: -1
    # Trigonometry
    sin:
    cos:
    tan:
    csc:
    sec:
    cot:
    asin:
    acos:
    atan:
    acsc:
    asec:
    acot:
    arcsin:
    arccos:
    arctan:
    arccsc:
    arcsec:
    arccot:
    sinh:
    cosh:
    tanh:
    csch:
    sech:
    coth:
    asinh:
    acosh:
    atanh:
    acsch:
    asech:
    acoth:
    arsinh:
    arcosh:
    artanh:
    arcsch:
    arsech:
    arcoth:
    arcsinh:
    arccosh:
    arctanh:
    arccsch:
    arcsech:
    arccoth:
    # Exponentials
    exp:
    exp_2:
    expm1:
    log:
    log_2:
    log1p:
    ln:
    ln_2:
    ln1p:
    logn: 2
    # Calculus
    dx: 0
    deriv: 2
    integral: 3
    integrate: 0
    # Statistics
    mean: -1
    var: -1
    variance: -1
    sd: -1
    std: -1
    stdev: -1
    tss: -1
    absdev: -1
    skew: -1
    kurt: -1
    kurtosis: -1
    lag1: -1
    autocorr: -1
    max: -1
    min: -1
    argmax: -1
    argmin: -1
    median: -1
    # Polynomials
    quad: 3
    quadc: 3
    cubic: 4
    cubicc: 4
    # Linear Algebra
    det: 1
    # Special Functions
    gamma:
    lngamma:
    gammastar:
    gammainv:
    fact:
    dfact:
    lnfact:
    lndfact:
    choose: 2
    lnchoose: 2
    permute: 2
    lnpermute: 2
    taylorcoeff: 2
    poch: 2
    lnpoch: 2
    pochrel: 2
    gammainc: 2
    gammaincq: 2
    gammaincp: 2
    beta: 2
    lnbeta: 2
    betainc: 3
    # Fast Fourier Transforms
    fft: -1
    ifft: -1
    # Random Number Generators
    # randseed:
    # rseed:
    # randu:
    # rand:
    # randup:
functionExprs:
    - frexp
    - tuple
    - quad
    - quadc
    - cubic
    - cubicc
    - det
    - fft
    - ifft
printFunctions:
    - tuple
unitconversions:
    prefixes: {
        "yocto": "y", "zepto": "z", "atto": "a",  "femto": "f", "pico": "p", "nano": "n", "micro": "u", "milli": "m", "kilo": "k",
        "mega": "M",  "giga": "G",  "tera": "T",  "peta": "P",  "exa": "E",  "zetta": "Z", "yotta": "Y",
    }
    categories:
        distance:
            base: meter
            baseabbr: m
            baseprefixes:
            prefixes: {
                "centi": "c", "deci": "d", "deca": "dc", "hecto": "h"
            }
            custom:
                centi: 1e-2
                deci: 1e-1
                deca: 1e1
                hecto: 1e2
            conversions: {
                "inch": "in", "foot": "ft", "yard": "yd", "mile": "mi", "mil": "mil", "nautical_mile": "nmi", "fathom": "fth"
            }
        time:
            base: second
            baseabbr: s
            baseprefixes:
            conversions: {
                "minute": "min", "hour": "hr", "week": "wk", "month": "mth", "year": "yr",
                "decade": "dec", "century": "cen", "millenium": "mln"
            }
            custom:
                month: 2628288
                year: 31536000
                decade: 315360000
                century: 3153600000
                millenium: 31536000000
        area:
            base: meterssquared
            baseabbr: "m^2"
            baseprefixes:
            conversions: {
                "hectare": "hec", "acre": "ac", "barn": "bn"
            }
        volume:
            base: meterscubed
            baseabbr: "m^3"
            baseprefixes:
            conversions: {
                "liter": "L", "us_gallon": "USG", "quart": "qt", "pint": "pt", "cup": "cp", "fluid_ounce": "floz",
                "tablespoon": "tbsp", "teaspoon": "tsp", "canadian_gallon": "CG", "uk_gallon": "UKG",
                "milliliter": "ml", "microliter": "ul"
            }
            custom:
                milliliter: 1e-6
                microliter: 1e-9
        mass:
            base: gram
            baseabbr: g
            baseprefixes:
            conversions: {
                "pound": "lb", "ounce": "oz", "ton": "t", "metric_ton": "mt", "uk_ton": "UKT", "troy_ounce": "toz",
                "carat": "CD", "unified_atomic_mass": "UAM"
            }
            custom:
                pound: "GSL_CONST_MKSA_POUND_MASS*1e3"
                ounce: "GSL_CONST_MKSA_OUNCE_MASS*1e3"
                ton: "GSL_CONST_MKSA_TON*1e3"
                metric_ton: "GSL_CONST_MKSA_METRIC_TON*1e3"
                uk_ton: "GSL_CONST_MKSA_UK_TON*1e3"
                troy_ounce: "GSL_CONST_MKSA_TROY_OUNCE*1e3"
                carat: "GSL_CONST_MKSA_CARAT"
                unified_atomic_mass: "GSL_CONST_MKSA_UNIFIED_ATOMIC_MASS"
